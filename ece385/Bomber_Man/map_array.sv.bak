///initial memory map
module map_array (input Clk, Reset,

input logic [4:0] map_in[16][20],
output logic [4:0] map_out [16][20]
);



always_ff @(posedge Clk or posedge Reset)
begin
if(Reset)
map_out <= {
 1,	 1,	 1,	 1,	 1,	 1,	 1,	 1,	 1,	 1,   1,	 1,	 1,	 1,	 1,	 1,	 1,	 1,	 1,	 1,
 1,	 13,   2,	 2,	 2,	 2,	 2,	 2,	 0,	 2,   0,	 2,	 2,	 0,	 0,	 0,	 0,	 0,	 2,	 1,
 1,	 0,    2,	 0,    0,    0,    0,	 2,	 0,	 2,   0,	 2,	 2,	 0,	 0,	 0,	 2,	 0,	 2,	 1,
 1,	 0,	 1,	 2,	 1,	 0,	 1,	 2,	 1,	 2,   2,	 1,	 2,	 1,	 2,	 1,	 2,	 1,	 2,	 1,
 1,	 0,	 2,	 2,	 0,	 0,	 2,	 2,	 0,	 2,   2,	 0,	 0,	 0,	 2,	 0,	 2,	 0,	 2,	 1,
 1,	 0,	 2,	 2,	 0,	 2,	 0,	 2,	 0,	 2,   2,	 0,	 0,	 0,	 2,	 0,	 2,	 0,	 0,	 1,
 1,	 0,	 1,	 2,	 1,	 2,	 1,	 2,	 1,	 0,   2,	 1,	 0,	 1,	 2,	 1,	 0,	 1,	 2,	 1,
 1,	 2,	 0,	 2,	 0,	 2,	 0,	 2,	 0,	 2,   0,	 2,	 2,	 2,	 0,	 0,	 0,	 0,	 2,	 1,
 1,	 2,	 0,	 0,	 0,	 2,	 0,	 2,	 0,	 0,   0,	 0,	 0,	 0,	 0,	 0,	 2,	 0,	 0,	 1,
 1,	 2,	 1,	 0,	 1,	 0,	 1,	 2,	 1,	 2,   2,	 1,	 2,	 1,	 2,	 1,	 2,	 1,	 0,	 1,
 1,	 2,	 0,    0,	 0,	 0,	 2,	 0,	 2,	 0,   2,	 2,	 0,	 2,	 0,	 2,	 0,	 2,	 2,	 1,
 1,	 2,	 0,	 0,	 0,	 2,	 0,	 2,	 0,	 2,   2,	 0,	 2,	 0,	 2,	 0,	 2,	 0,	 2,	 1,
 1,	 2,	 1,	 2,	 1,	 2,	 1,	 2,	 1,	 2,   2,	 1,	 0,	 1,	 0,	 1,	 0,	 1,	 2,	 1,
 1,	 0,	 0,	 0,	 2,	 0,	 0,	 2,	 0,	 2,   0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,	 0,    1,
 1,	 0,	 0,	 0,	 0,	 0,	 0,	 2,	 0,	 0,   2,	 2,	 2,	 0,	 2,	 2,	 2,	 2,	 21,   1,
 1,	 1,	 1,	 1,	 1,	 1,	 1,	 1,	 1,	 1,   1,	 1,	 1,	 1,	 1,	 1,	 1,	 1,	 1,	 1
};

else
map_out <= map_in;

end
endmodule 